---
import SectionIndex from "@components/SectionIndex.astro";
import sendmeMockup from "@images/sendme-mockup.avif"
import adminSendmeMockup from "@images/admin-sendme-mockup.avif"
import { Image } from "astro:assets";
import OptionSelector from "@components/OptionSelector";
import SectionTitle from "@components/SectionTitle.astro";
import VerticalLine from "@icons/vertical-line.astro";

const PROJECTS = [
    
    {
        dataId: '0',
        title: 'sendme - App integrated with Amazon API',
        description: 'Created from scratch, using React and Tailwind CSS, Integrated with a backend based on Node JS and SQLite',
        mockup: sendmeMockup.src,
        style: '',
        teckStack: ['javascript', 'react.js', 'tailwind.css', 'node.js', 'sqlite']

    },
    
    {
        dataId: '1',
        title: 'admin sendme - Administration App',
        description: 'Order management app, turso database implementation. created using Node JS and SQlite',
        mockup: adminSendmeMockup.src,
        teckStack: ['node.js', 'express.js', 'sqlite', 'turso DB', 'react.js'],
        style: 'hidden',

    },
    

    

    
    
    {
        dataId: '2',
        title: 'admin sendme - Administration App',
        description: 'Order management app, turso database implementation. created using Node JS and SQlite',
        mockup: adminSendmeMockup.src,
        style: 'hidden',
        teckStack: ['node.js', 'express.js', 'sqlite', 'turso DB', 'react.js']

    },
    
]
---

<SectionIndex style="flex-col">

        <SectionTitle>projects</SectionTitle>
        
        <div class="flex relative">
            <div>
                {
                    PROJECTS.map((project)=>(
                        <div data-id={`project-${project.dataId}`} class="flex flex-col" class:list={project.style}>
                            
                                <div  class="prose">
                                    
                            
                                    <h3 class="text-theme-gray">
                                        {project.title}
                                    </h3>
                            
                                    <div>
                                        {project.description}
                                    </div>
                            
                                </div>
                                <div class="justify-center items-center relative min-h-80 max-h-80 mb-8">
                                    <div class="flex" >
        
                                        {/*Left Mockup*/}
                                        <picture class="z-10">
                                            {
                                                PROJECTS[PROJECTS.indexOf(project)-1]?(
                                                <img option-mockup-id = {PROJECTS[PROJECTS.indexOf(project)-1].dataId} class="page-mockup-aside absolute page-mockup h-72 w-auto mt-9 -left-40" src={PROJECTS[PROJECTS.indexOf(project)-1].mockup} alt={`Screenshot of ${project.title}, a project created by devian.`}>
                                                ):(
                                                    ""
                                                )
                                            }
                                        </picture>
        
        
                                        {/*Main Mockup*/}
                                        <picture class="mockup-container z-20 h-72 mt-9 rounded-xl overflow-hidden relative flex justify-center items-center">
                                            <img option-mockup-id={`${project.dataId}`} class="principal-mockup z-10 page-mockup size-full animate-fade" src={project.mockup} alt={`Screenshot of ${project.title}, a project created by devian.`}>

                                            <div
                                            class="absolute w-full h-full scale-y-[-1] opacity-50 pointer-events-none animate-slide bg-gradient-to-r from-transparent via-white/50 to-transparent z-20"
                                            ></div>
                                            
                                            <section class="absolute size-full flex">
                                                <div option-circle={`option-circle-${project.dataId}`} class="size-full inset-0 z-20 bg-black/85 absolute pointer-events-none flex justify-center  self-center place-self-center invisible">
                                                
                                                </div>
        
                                               
                                                <article more-info-id = {`more-info-${project.dataId}`} class="z-30 absolute size-full pointer-events-none flex flex-col pl-5 pt-5 pr-5 text-white invisible">
                                                    <h3 class="text-md">
                                                        {project.title}
                                                    </h3>
                                                    <p class="text-sm mt-2 text-md font-extralight">
                                                        {project.description}
                                                    </p>
                                                    <h4 class='mt-4'>
                                                        Tools used
                                                    </h4>
                                                    <div class="grid grid-cols-2 pr-5">
                                                        <ul class=" mt-2 text-md grid grid-cols-2 font-extralight">
                                                            {project.teckStack.map((tech)=>(
                                                                <li>{tech}</li>
                                                            ))}
                                                    </ul>
        
                                                    <div class="size-full flex flex-col gap-4 items-end text-theme-gray">
                                                        <button class="bg-white px-3 py-1 rounded-lg">
                                                            open site
                                                        </button>
                                                        <button class="bg-white px-3 py-1 rounded-lg">
                                                            more info
                                                        </button>
                                                    </div>
                                                    
                                                    </div>
                                                </article>
                                                
                                                
                                            </section>
                                           
                                        </picture>
        
        
                                        {/*Right mockup*/}
                                        <picture class="z-10 h-72">
                                            {
                                                PROJECTS[PROJECTS.indexOf(project)+1]?(<img option-mockup-id = {PROJECTS[PROJECTS.indexOf(project)+1]?.dataId} class="page-mockup-aside absolute page-mockup -right-36 h-72 w-auto mt-9 hover:" src={PROJECTS[PROJECTS.indexOf(project)+1]?.mockup} alt="Screenshot of sendme, a project created by devian.">)
                                                :
                                                ("")
                                            }
                                        </picture>
        
                                        
                                    </div>
        
                                    {/* <!-- <strong class="self-end mt-11 font-normal text-theme-primary-blue underline underline-offset-8">
                                        all projects
                                    </strong> --> */}
                                </div>
                            
                            
                        </div>
        
                    ))
                }
                
                <div class="flex justify-center">
                    <OptionSelector options={PROJECTS} toManage={"project"} client:only/>
                </div>
            </div>
            
        </div>
    

     
    
</SectionIndex>


<script>
import { handleClick } from "src/utils/handleClickButton"


    const mockupsOptions = document.querySelectorAll('.page-mockup')

    mockupsOptions.forEach((mockup)=>{
        const mockupId = mockup.getAttribute('option-mockup-id')
        
        mockup.addEventListener('click', ()=>{
        
            if (mockupId){

                
                handleClick(mockupId, 'project')
                

            }
            

                    
        })
    })

    

    // Manejar la animación del círculo
    const mainMockups = document.querySelectorAll('.principal-mockup')


    mainMockups.forEach((mockup) => {
        const mockupId = mockup.getAttribute('option-mockup-id')
        const circleAnimation = document.querySelector(`[option-circle = 'option-circle-${mockupId}']`)
        const moreInfoOnHover = document.querySelector(`[more-info-id = 'more-info-${mockupId}']`)
        if (!mockupId || !circleAnimation) return

        // Manejar mouseenter
        mockup.addEventListener('mouseenter', () => {

           
        
            circleAnimation.classList.remove('invisible')

            
            
            moreInfoOnHover?.classList.remove('invisible')
     
            
            
            
          
        })

        // Manejar mouseleave
        mockup.addEventListener('mouseleave', () => {
            // const handleTransitionEnd = () => {

                
                
                   
            //     circleAnimation.classList.add('invisible')
            //     circleAnimation.removeEventListener('transitionend', handleTransitionEnd)
            //     moreInfoOnHover?.classList.add('invisible')
            //     moreInfoOnHover?.removeEventListener('transitionend', handleTransitionEnd)
                
                
            // }
            
            
            circleAnimation.classList.add('invisible')
       

           
            moreInfoOnHover?.classList.add('invisible')
           
        })
    })
</script>

<style>
    .mockup-container{
        border: 4px solid rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;

    }

    .principal-mockup{
        transition: all 0.4s ease-in-out;
        filter: drop-shadow(0px 0px 0.5px #000000);
        cursor: pointer;
    }

    .principal-mockup:hover {
        filter: drop-shadow(0px 0px 0.5px #000000) blur(4px);
        transform: scale(1.05);
    }

    .page-mockup-aside{
        transform: scale(0.6);
        opacity: 0.2;
        filter: blur(1px);
        border-radius: 20px;
        border: 1px solid rgba(0, 0, 0, 1);
        filter: brightness(70%);
    }

    .page-mockup-aside:hover{
        transform: scale(0.65);
        transition: transform 0.1s ease-in-out;
    }

@keyframes slide {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }

  .animate-slide {
    animation: slide 5s infinite linear;
  }
 
</style>
